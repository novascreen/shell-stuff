[core]
	fileMode = false
	autocrlf = input
	editor = code --wait

[push]
	default = simple

[rerere]
	enabled = true

[gitflow "prefix"]
	versiontag = v

[fetch]
	prune = true
	pruneTags = true

[init]
  defaultBranch = main

[alias]
	alias = config --get-regexp ^alias\\.
	amend = commit --amend
	amend-no-edit = commit --amend --no-edit
	branch-delete-fully = "!f() { git branch -D $1; git push (git remote) --delete $1; }; f"
	branch-delete-merged = "!git branch --merged | grep  -v '\\*\\|master\\|main\\|develop' | xargs -n 1 git branch -d"
	branch-delete-squashed = "!git checkout -q main && git for-each-ref refs/heads/ \"--format=%(refname:short)\" | while read branch; do mergeBase=$(git merge-base main $branch) && [[ $(git cherry main $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == \"-\"* ]] && git branch -D $branch; done"
	branch-name = "!git rev-parse --abbrev-ref HEAD"
	clean-fully = clean -xfd
	check-ignore-verbose = check-ignore -v
	checkout-branch = checkout -b
	checkout-track = checkout -t
	discard = "!git reset --hard; git clean -fd"
	hash-short = rev-parse --short HEAD
	my-history = !git log --author=$(git config user.email) --format="format:%Cblue%ad%n%s%n%b%n"
	pull-force = "!branch=`git branch-name`; git checkout main; git branch $branch -D; git checkout -t origin/$branch"
	push-force = push --force
	publish = "!git push -u origin $(git branch-name)"
	squash = "!f() { git reset --soft HEAD~$1 && git commit; }; f"
	stash-staged = stash save --keep-index --include-untracked \"remove-unstaged\"
	sync-tags = fetch --prune --pruneTags

	ada = add .
	amd = !git amend
	amdne = !git amend-no-edit
	b = branch
	bl = branch -av
	bd = branch -d
	bdf = !git branch-delete-fully
	bdm = !git branch-delete-merged
	bds = !git branch-delete-squashed
	bn = !git branch-name
	cl = !git clean-fully
	civ = !git check-ignore-verbose
	co = checkout
	cob = !git checkout-branch
	cot = !git checkout-track
	cm = commit
	cmn = commit --no-verify
	dc = !git discard
	fa = fetch --all
	hsh = !git hash-short
	mh = !git my-history
	pl = pull
	plf = !git pull-force
	plr = pull --rebase
	pshn = push --no-verify
	pshf = !git push-force
	pshfn = !git push-force --no-verify
	pub = !git publish
	pubn = !git publish --no-verify
	rb = rebase
	rh = reset --hard
	s = status
	ss = !git stash-staged
	st = !git sync-tags
